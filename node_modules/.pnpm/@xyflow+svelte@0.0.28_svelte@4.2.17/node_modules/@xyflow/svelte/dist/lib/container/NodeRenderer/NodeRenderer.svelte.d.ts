import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: Record<string, never>;
    events: {
        nodeclick: CustomEvent<{
            node: import("../..").Node;
            event: MouseEvent | TouchEvent;
        }>;
        nodemouseenter: CustomEvent<{
            node: import("../..").Node;
            event: MouseEvent | TouchEvent;
        }>;
        nodemousemove: CustomEvent<{
            node: import("../..").Node;
            event: MouseEvent | TouchEvent;
        }>;
        nodemouseleave: CustomEvent<{
            node: import("../..").Node;
            event: MouseEvent | TouchEvent;
        }>;
        connectstart: any;
        connect: any;
        connectend: any;
        nodedrag: CustomEvent<{
            node: import("../..").Node;
            nodes: import("../..").Node[];
            event: MouseEvent | TouchEvent;
        }>;
        nodedragstart: CustomEvent<{
            node: import("../..").Node;
            nodes: import("../..").Node[];
            event: MouseEvent | TouchEvent;
        }>;
        nodedragstop: CustomEvent<{
            node: import("../..").Node;
            nodes: import("../..").Node[];
            event: MouseEvent | TouchEvent;
        }>;
        nodecontextmenu: CustomEvent<{
            node: import("../..").Node;
            event: MouseEvent | TouchEvent;
        }>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type NodeRendererProps = typeof __propDef.props;
export type NodeRendererEvents = typeof __propDef.events;
export type NodeRendererSlots = typeof __propDef.slots;
export default class NodeRenderer extends SvelteComponentTyped<NodeRendererProps, NodeRendererEvents, NodeRendererSlots> {
}
export {};
