import { SvelteComponentTyped } from "svelte";
import { type Connection, type HandleType } from '@xyflow/system';
import type { HandleComponentProps } from '../../types';
declare const __propDef: {
    props: HandleComponentProps;
    events: {
        connect: CustomEvent<{
            connection: Connection;
        }>;
        connectstart: CustomEvent<{
            event: MouseEvent | TouchEvent;
            nodeId: string | null;
            handleId: string | null;
            handleType: HandleType | null;
        }>;
        connectend: CustomEvent<{
            event: MouseEvent | TouchEvent;
        }>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type HandleProps = typeof __propDef.props;
export type HandleEvents = typeof __propDef.events;
export type HandleSlots = typeof __propDef.slots;
export default class Handle extends SvelteComponentTyped<HandleProps, HandleEvents, HandleSlots> {
}
export {};
