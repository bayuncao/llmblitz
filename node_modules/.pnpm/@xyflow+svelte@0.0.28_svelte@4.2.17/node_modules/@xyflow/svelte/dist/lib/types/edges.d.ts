import type { SvelteComponent, ComponentType } from 'svelte';
import type { EdgeBase, BezierPathOptions, DefaultEdgeOptionsBase, EdgePosition, SmoothStepPathOptions } from '@xyflow/system';
import type { Node } from './';
export type DefaultEdge<EdgeData = any> = Omit<EdgeBase<EdgeData>, 'focusable'> & {
    label?: string;
    labelStyle?: string;
    style?: string;
    class?: string;
};
type SmoothStepEdgeType<T> = DefaultEdge<T> & {
    type: 'smoothstep';
    pathOptions?: SmoothStepPathOptions;
};
type BezierEdgeType<T> = DefaultEdge<T> & {
    type: 'default';
    pathOptions?: BezierPathOptions;
};
type StepEdgeType<T> = DefaultEdge<T> & {
    type: 'step';
};
export type Edge<T = any> = DefaultEdge<T> | SmoothStepEdgeType<T> | BezierEdgeType<T> | StepEdgeType<T>;
export type EdgeProps = Omit<Edge, 'sourceHandle' | 'targetHandle'> & EdgePosition & {
    markerStart?: string;
    markerEnd?: string;
    sourceHandleId?: string | null;
    targetHandleId?: string | null;
};
export type EdgeTypes = Record<string, ComponentType<SvelteComponent<EdgeProps>>>;
export type DefaultEdgeOptions = Omit<DefaultEdgeOptionsBase<Edge>, 'focusable'>;
export type EdgeLayouted = Pick<Edge, 'type' | 'id' | 'data' | 'style' | 'source' | 'target' | 'animated' | 'selected' | 'selectable' | 'label' | 'labelStyle' | 'interactionWidth' | 'markerStart' | 'markerEnd' | 'sourceHandle' | 'targetHandle' | 'ariaLabel' | 'hidden' | 'class'> & EdgePosition & {
    sourceNode?: Node;
    targetNode?: Node;
    sourceHandleId?: string | null;
    targetHandleId?: string | null;
};
export {};
