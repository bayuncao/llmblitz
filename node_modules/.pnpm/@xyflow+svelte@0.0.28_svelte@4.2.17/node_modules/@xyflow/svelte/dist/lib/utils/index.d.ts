import type { Edge, Node } from '../types';
export declare const isNode: (element: Node | Edge | import("@xyflow/system").Connection) => element is Node;
export declare const isEdge: (element: Node | Edge | import("@xyflow/system").Connection) => element is Edge;
export declare const getOutgoers: (node: Node | {
    id: string;
}, nodes: Node[], edges: Edge[]) => Node[];
export declare const getIncomers: (node: Node | {
    id: string;
}, nodes: Node[], edges: Edge[]) => Node[];
export declare const addEdge: (edgeParams: Edge | import("@xyflow/system").Connection, edges: Edge[]) => Edge[];
export declare const updateEdge: (oldEdge: Edge, newConnection: import("@xyflow/system").Connection, edges: Edge[], options?: import("@xyflow/system").UpdateEdgeOptions | undefined) => Edge[];
export declare const getConnectedEdges: (nodes: Node[], edges: Edge[]) => Edge[];
